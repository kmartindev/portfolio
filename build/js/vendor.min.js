/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./js/vendor.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./js/vendor.js":
/*!**********************!*\
  !*** ./js/vendor.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _vendor_grained__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vendor/grained */ "./js/vendor/grained.js");
/* harmony import */ var _vendor_grained__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_vendor_grained__WEBPACK_IMPORTED_MODULE_0__);

grained('#noise', {
  'animate': true,
  'patternWidth': 500,
  'patternHeight': 500,
  'grainOpacity': 0.05,
  'grainDensity': 1,
  'grainWidth': 1.15,
  'grainHeight': 1.15
});

/***/ }),

/***/ "./js/vendor/grained.js":
/*!******************************!*\
  !*** ./js/vendor/grained.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports) {

/*! Grained.js
* Author : Sarath Saleem  - https://github.com/sarathsaleem
* MIT license: http://opensource.org/licenses/MIT
* GitHub : https://github.com/sarathsaleem/grained
* v0.0.1
*/
(function (window, doc) {
  "use strict";

  function grained(ele, opt) {
    var element = null,
        elementId = null,
        selectorElement = null;

    if (typeof ele === 'string') {
      element = doc.getElementById(ele.split('#')[1]);
    }

    if (!element) {
      console.error('Grained: cannot find the element with id ' + ele);
      return;
    } else {
      elementId = element.id;
    } //set style for parent


    if (element.style.position !== 'absolute') {
      element.style.position = 'relative';
    }

    element.style.overflow = 'hidden';
    var prefixes = ["", "-moz-", "-o-animation-", "-webkit-", "-ms-"]; //default option values

    var options = {
      animate: true,
      patternWidth: 100,
      patternHeight: 100,
      grainOpacity: 0.1,
      grainDensity: 1,
      grainWidth: 1,
      grainHeight: 1,
      grainChaos: 0.5,
      grainSpeed: 20
    };
    Object.keys(opt).forEach(function (key) {
      options[key] = opt[key];
    });

    var generateNoise = function generateNoise() {
      var canvas = doc.createElement('canvas');
      var ctx = canvas.getContext('2d');
      canvas.width = options.patternWidth;
      canvas.height = options.patternHeight;

      for (var w = 0; w < options.patternWidth; w += options.grainDensity) {
        for (var h = 0; h < options.patternHeight; h += options.grainDensity) {
          var rgb = Math.random() * 256 | 0;
          ctx.fillStyle = 'rgba(' + [rgb, rgb, rgb, options.grainOpacity].join() + ')';
          ctx.fillRect(w, h, options.grainWidth, options.grainHeight);
        }
      }

      return canvas.toDataURL('image/png');
    };

    function addCSSRule(sheet, selector, rules, index) {
      var ins = '';

      if (selector.length) {
        ins = selector + "{" + rules + "}";
      } else {
        ins = rules;
      }

      if ("insertRule" in sheet) {
        sheet.insertRule(ins, index);
      } else if ("addRule" in sheet) {
        sheet.addRule(selector, rules, index);
      }
    }

    var noise = generateNoise();
    var animation = '',
        keyFrames = ['0%:-10%,10%', '10%:-25%,0%', '20%:-30%,10%', '30%:-30%,30%', '40%::-20%,20%', '50%:-15%,10%', '60%:-20%,20%', '70%:-5%,20%', '80%:-25%,5%', '90%:-30%,25%', '100%:-10%,10%'];
    var pre = prefixes.length;

    while (pre--) {
      animation += '@' + prefixes[pre] + 'keyframes grained{';

      for (var key = 0; key < keyFrames.length; key++) {
        var keyVal = keyFrames[key].split(':');
        animation += keyVal[0] + '{';
        animation += prefixes[pre] + 'transform:translate(' + keyVal[1] + ');';
        animation += '}';
      }

      animation += '}';
    } //add animation keyframe


    var animationAdded = doc.getElementById('grained-animation');

    if (animationAdded) {
      animationAdded.parentElement.removeChild(animationAdded);
    }

    var style = doc.createElement("style");
    style.type = "text/css";
    style.id = 'grained-animation';
    style.innerHTML = animation;
    doc.body.appendChild(style); //add custimozed style

    var styleAdded = doc.getElementById('grained-animation-' + elementId);

    if (styleAdded) {
      styleAdded.parentElement.removeChild(styleAdded);
    }

    style = doc.createElement("style");
    style.type = "text/css";
    style.id = 'grained-animation-' + elementId;
    doc.body.appendChild(style);
    var rule = 'background-image: url(' + noise + ');';
    rule += 'position: absolute;content: "";height: 300%;width: 300%;left: -100%;top: -100%;';
    pre = prefixes.length;

    if (options.animate) {
      while (pre--) {
        rule += prefixes[pre] + 'animation-name:grained;';
        rule += prefixes[pre] + 'animation-iteration-count: infinite;';
        rule += prefixes[pre] + 'animation-duration: ' + options.grainChaos + 's;';
        rule += prefixes[pre] + 'animation-timing-function: steps(' + options.grainSpeed + ', end);';
      }
    } //selecter element to add grains


    selectorElement = '#' + elementId + '::before';
    addCSSRule(style.sheet, selectorElement, rule);
  }

  window.grained = grained; //END
})(window, document);

/***/ })

/******/ });
//# sourceMappingURL=vendor.min.js.map